module fulladder (a, b, cin, sum, cout);
input a, b, cin;
output sum, cout;
assign sum = a^b^cin;
assign cout = (a&b)|(b&cin)|(a&cin);
endmodule



module fulladder_dftb;
reg A10,B10,Cin10;
wire Sum10, Cout10;
fulladder FA1(.a(A10) , .b(B10) , .cin(Cin10) , .sum(Sum10) , .cout(Cout10));

initial 
 begin
  A10=0;
   B10=0;
   Cin10=0;
    #100 $finish;
end
always #40 A10=~A10;
always #20 B10=~B10;
always #10 Cin10=~Cin10;
always @(A10 or B10 or Cin10)

 $monitor ("At TIME(in ns)=%t , a10=%d b10=%d cin10=%d,sum10=%d,cout10=%d", $time ,A10,B10,Cin10,Sum10,Cout10);
endmodule