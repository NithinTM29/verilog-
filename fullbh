module fulladder_bh(a10,b10,cin10,sum10,cout10);
input a10,b10,cin10;
output sum10,cout10;
reg sum10,cout10;
wire [2:0]x;
assign x={a10,b10,cin10};
always @(x)
begin
   if(x==3'b001|x==3'b010|x==3'b100|x==3'b111)
   sum10=1'b1; else sum10=1'b0;
   if(x==3'b011|x==3'b101|x==3'b110|x==3'b111)
   cout10=1'b1; else cout10=1'b0;
  end
endmodule

//TEST BENCH
module fulladder_bhtb;
reg A10,B10,Cin10;
wire Sum10, Cout10;
fulladder_bh FA1(.a10(A10) , .b10(B10) , .cin10(Cin10) , .sum10(Sum10) , .cout10(Cout10));

initial 
 begin
  A10=0;
   B10=0;
   Cin10=0;
    #100 $finish;
end
always #40 A10=~A10;
always #20 B10=~B10;
always #10 Cin10=~Cin10;
always @(A10 or B10 or Cin10)

 $monitor ("At TIME(in ns)=%t , a10=%d b10=%d cin10=%d,sum10=%d,cout10=%d", $time ,A10,B10,Cin10,Sum10,Cout10);
endmodule